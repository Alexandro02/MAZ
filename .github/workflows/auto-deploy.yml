name: Deploy Astro to Hostinger

on:
  push:
    branches:
      - main
  workflow_dispatch:
  repository_dispatch:
    types: [wp_update]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.pnpm-store
            node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build project
        run: pnpm run build
        env:
          VITE_JWT_USER: ${{ secrets.VITE_JWT_USER }}
          VITE_JWT_PASS: ${{ secrets.VITE_JWT_PASS }}
          VITE_WP_REST_ENDPOINT: ${{ secrets.VITE_WP_REST_ENDPOINT }}
          VITE_WP_REST_ENDPOINT_ACF: ${{ secrets.VITE_WP_REST_ENDPOINT_ACF }}
          VITE_JWT_SECRET: ${{ secrets.VITE_WP_PREVIEW_SECRET }}

      - name: Deploy via FTP
        id: deploy
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_HOST }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          server-dir: ${{ secrets.FTP_PATH }}
          local-dir: ./dist/

      - name: Notify Slack Success
        if: success()
        uses: slackapi/slack-github-action@v2.0.0
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          payload: |
            {
              "text": ":rocket: Deploy completado correctamente por _${{ github.actor }}_ en *${{ github.repository }}*.",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Deploy exitoso en producci√≥n.*\nRepositorio: ${{ github.repository }}\nBranch: ${{ github.ref_name }}"
                  }
                },
                {
                  "type": "context",
                  "elements": [
                    {
                      "type": "mrkdwn",
                      "text": "Commit: ${{ github.sha }}"
                    }
                  ]
                }
              ]
            }

      - name: Notify Slack Failure
        if: failure()
        uses: slackapi/slack-github-action@v2.0.0
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          payload: |
            {
              "text": ":x: *Error en el deploy* ejecutado por _${{ github.actor }}_ en *${{ github.repository }}*.",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Hubo un fallo durante el despliegue.*\nRepositorio: ${{ github.repository }}\nBranch: ${{ github.ref_name }}"
                  }
                },
                {
                  "type": "context",
                  "elements": [
                    {
                      "type": "mrkdwn",
                      "text": "Commit: ${{ github.sha }}"
                    }
                  ]
                }
              ]
            }
