name: Deploy Astro to Hostinger

on:
  push:
    branches:
      - main
  workflow_dispatch:
  repository_dispatch:
    types: [wp_update]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install

      - name: Build project
        run: pnpm build
        env:
          VITE_JWT_USER: ${{ secrets.VITE_JWT_USER }}
          VITE_JWT_PASS: ${{ secrets.VITE_JWT_PASS }}
          VITE_WP_REST_ENDPOINT: ${{ secrets.VITE_WP_REST_ENDPOINT }}
          VITE_WP_REST_ENDPOINT_ACF: ${{ secrets.VITE_WP_REST_ENDPOINT_ACF }}
          VITE_JWT_SECRET: ${{ secrets.VITE_WP_PREVIEW_SECRET }}

      - name: Verify and prepare deployment structure
        run: |
          # Ensure correct directory structure
          mkdir -p dist/public_html
          mv dist/client dist/public_html/
          mv dist/server dist/public_html/
          
          # Prepare server files
          cp server/package.json dist/public_html/server/
          cd dist/public_html/server && pnpm install --prod
          
          # Set correct permissions
          chmod +x entry.mjs
          echo "PORT=4321" > .env
          
          # Create start script
          echo '#!/bin/bash
          cd "$( dirname "${BASH_SOURCE[0]}" )"
          node entry.mjs' > start.sh
          chmod +x start.sh

      - name: Deploy via FTP
        id: deploy
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_HOST }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          server-dir: ${{ secrets.FTP_PATH }}
          local-dir: ./dist/client/
          chmod: "755"
          exclude: |
            **/.git*
            **/.git*/**
            **/node_modules/**
            **/.env

      - name: Verify deployment
        if: success()
        run: |
          echo "Deployment structure:"
          ls -la dist/public_html/
          echo "Server files:"
          ls -la dist/public_html/server/

      - name: Notify Slack Success
        if: success()
        uses: slackapi/slack-github-action@v2.0.0
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          payload: |
            {
              "text": ":rocket: Deploy completado correctamente por _${{ github.actor }}_ en *${{ github.repository }}*.",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Deploy exitoso en producci√≥n.*\nRepositorio: ${{ github.repository }}\nBranch: ${{ github.ref_name }}"
                  }
                },
                {
                  "type": "context",
                  "elements": [
                    {
                      "type": "mrkdwn",
                      "text": "Commit: ${{ github.sha }}"
                    }
                  ]
                }
              ]
            }

      - name: Notify Slack Failure
        if: failure()
        uses: slackapi/slack-github-action@v2.0.0
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          payload: |
            {
              "text": ":x: *Error en el deploy* ejecutado por _${{ github.actor }}_ en *${{ github.repository }}*.",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Despliegue fallido.*\nRepositorio: ${{ github.repository }}\nBranch: ${{ github.ref_name }}"
                  }
                },
                {
                  "type": "context",
                  "elements": [
                    {
                      "type": "mrkdwn",
                      "text": "Commit: ${{ github.sha }}"
                    }
                  ]
                }
              ]
            }
